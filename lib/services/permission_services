
import 'package:flutter/material.dart';
import 'package:permission_handler/permission_handler.dart';

class PermissionService extends ChangeNotifier {
  final _permissionHandler = PermissionHandler();
  PermissionStatus _locationStatus = PermissionStatus.undetermined;

  PermissionStatus get locationStatus => _locationStatus;

  Future<bool> requestLocationPermission() async {
    var status = await _permissionHandler.requestPermissions([Permission.locationWhenInUse]);
    _locationStatus = status[Permission.locationWhenInUse]!;
    notifyListeners(); // Notify listeners about permission change
    return status[Permission.locationWhenInUse] == PermissionStatus.granted;
  }

  Future<bool> hasLocationPermission() async {
    var status = await _permissionHandler.checkPermissionStatus(Permission.locationWhenInUse);
    _locationStatus = status;
    notifyListeners();
    return status == PermissionStatus.granted;
  }

  void openAppSettings() {
    _permissionHandler.openAppSettings();
  }
}

class PermissionServiceWidget extends StatefulWidget {
  final Widget child;

  const PermissionServiceWidget({Key? key, required this.child}) : super(key: key);

  @override
  _PermissionServiceWidgetState createState() => _PermissionServiceWidgetState();
}

class _PermissionServiceWidgetState extends State<PermissionServiceWidget> {
  final permissionService = PermissionService();

  @override
  void initState() {
    super.initState();
    permissionService.addListener(() => setState(() {})); // Rebuild on permission change
  }

  @override
  Widget build(BuildContext context) {
    if (permissionService.locationStatus == PermissionStatus.granted) {
      return widget.child; // Show child widget if permission granted
    } else if (permissionService.locationStatus == PermissionStatus.denied) {
      return Center(
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            const Text('Location permission is denied'),
            ElevatedButton(
              onPressed: () async {
                await permissionService.requestLocationPermission();
              },
              child: const Text('Request Permission'),
            ),
            TextButton(
              onPressed: permissionService.openAppSettings,
              child: const Text('Open App Settings'),
            ),
          ],
        ),
      );
    } else {
      return const Center(child: CircularProgressIndicator()); // Show loading indicator while checking permission
    }
  }

  @override
  void dispose() {
    permissionService.removeListener(() => setState(() {}));
    super.dispose();
  }
}
